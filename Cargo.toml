[package]
name = "scancode-rust"
version = "0.0.2"
edition = "2024"
repository = "https://github.com/mstykow/scancode-rust"
description = "A Rust-based tool for scanning and analyzing code."
license = "Apache-2.0"
keywords = ["scancode", "license", "analysis", "rust"]
categories = ["command-line-utilities", "development-tools"]
readme = "README.md"
authors = ["Maxim Stykow"]

[dependencies]
chrono = "0.4.40"
clap = { version = "4.5.32", features = ["derive"] }
content_inspector = "0.2.4"
glob = "0.3.2"
indicatif = "0.17.11"
md-5 = "0.10.6"
mime_guess = "2.0.5"
rayon = "1.10.0"
rustc_version_runtime = "0.3.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
sha1 = "0.10.6"
sha2 = "0.10.8"
sys-info = "0.9.1"
include_dir = "0.7"

# askalono deps
anyhow = "1.0.44"
lazy_static = "1.3.0"
log = "0.4.6"
regex = "1.1.7"
rmp-serde = "1.1.1"
unicode-normalization = "0.1.8"

# gzip via flate2 is available via feature flag if you prefer that over
# zstd. it's also enabled for wasm32 builds, as zstd doesn't yet compile for
# that target. in order to build a gzip cache, you'll need the flag enabled
# on your build machine too.

zstd = "0.13"
flate2 = { version = "1.0.14", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
flate2 = "1.0.14"

[dev-dependencies]
env_logger = "0.11"

[profile.release]
# Enable link-time optimization for better cross-module optimizations
lto = true

# Enable whole-program optimization
codegen-units = 1

# Maximum optimization level
opt-level = 3

# Strip debug symbols to reduce binary size
strip = true

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[[bin]]
name = "scancode-rust"
path = "src/main.rs"

[features]
default = ["spdx"]
gzip = ["flate2"]
spdx = []